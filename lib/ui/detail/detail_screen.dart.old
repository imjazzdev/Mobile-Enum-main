import 'dart:io';

import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:intl/intl.dart';
import 'package:mobile_enum/costumview/cv_button_submit.dart';
import 'package:mobile_enum/costumview/detail/costumD_input_box.dart';
import 'package:mobile_enum/costumview/detail/costum_coordinatBtn.dart';
import 'package:mobile_enum/costumview/detail/costum_datepicker.dart';
import 'package:mobile_enum/costumview/detail/costum_dropdown.dart';
import 'package:mobile_enum/costumview/detail/costum_inputfile.dart';
import 'package:mobile_enum/costumview/detail/costum_inputimage.dart';
import 'package:mobile_enum/costumview/detail/costum_timepicker.dart';
import 'package:mobile_enum/data/controller/detail_indikator_controller.dart';
import 'package:mobile_enum/data/model/region_unit_model.dart';

import '../../data/model/dashboard_indikator_model.dart';

class DetailScreen extends StatefulWidget {
  const DetailScreen({super.key});

  @override
  State<DetailScreen> createState() => _DetailScreenState();
}

class _DetailScreenState extends State<DetailScreen> {
  var data = Get.arguments as DashboardIndikatorModel;
  DetailIndikatorController detailIndikatorController =
      DetailIndikatorController();
  DateTime? selectedDate;
  DateTime? afterSelectedDate;

  String? selectedKabupaten;
  String? selectedKecamatan;
  String? selectedDesa;

  List<DropdownMenuItem<String>> _buildKecamatanItems(String? kabupatenId) {
    if (kabupatenId == null) return [];
    final kabupaten = kabupatens.firstWhere(
      (k) => k.id == kabupatenId,
      orElse: () => Kabupaten(id: '', nama: '', kecamatans: []),
    );
    return kabupaten.kecamatans
        .map((kecamatan) => DropdownMenuItem(
              value: kecamatan.id,
              child: Text(kecamatan.nama),
            ))
        .toList();
  }

  List<DropdownMenuItem<String>> _buildDesaItems(String? kecamatanId) {
    if (kecamatanId == null) return [];
    for (final kabupaten in kabupatens) {
      final kecamatan = kabupaten.kecamatans.firstWhere(
        (k) => k.id == kecamatanId,
        orElse: () => Kecamatan(id: '', nama: '', desas: []),
      );
      if (kecamatan.desas.isNotEmpty) {
        return kecamatan.desas
            .map((desa) => DropdownMenuItem(
                  value: desa.id,
                  child: Text(desa.nama),
                ))
            .toList();
      }
    }
    return [];
  }

  File? _selectedFile;

  void _handleFilePicked(File file) {
    setState(() {
      _selectedFile = file;
    });
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
          content: Text(
              "File ${_selectedFile!.path.split('/').last} berhasil dipilih.")),
    );
  }

  @override
  Widget build(BuildContext context) {
    /*return Scaffold(
      body: Stack(
        children: [
          Container(
            color: Colors.purple,
            child: SingleChildScrollView(
              child: Column(
                children: [
                  Container(
                    alignment: AlignmentDirectional.centerStart,
                    padding: const EdgeInsets.only(top:20, left:10),
                    child: IconButton(
                      icon: const Icon(
                        Icons.arrow_back,
                        color: Colors.white,
                      ),
                      onPressed: (){
                        Get.back();
                      },
                    ),
                  ),
                  Container(
                    alignment: Alignment.centerLeft,
                    padding: const EdgeInsets.only(
                        left: 20, right: 20, bottom: 20),
                    child: const Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          "Detail Indikator",
                          style: TextStyle(
                            fontSize: 20,
                            color: Colors.white,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        Text(
                          "Sebaran data untuk indikator tertentu.",
                          style: TextStyle(
                            fontSize: 11,
                            color: Colors.white,
                          ),
                        ),
                      ],
                    ),
                  ),
                  Card(
                    margin: const EdgeInsets.only(right: 20, left: 20),
                    child: Container(
                      margin: const EdgeInsets.only(right: 20, left: 20),
                      child: Container(
                        padding: const EdgeInsets.only(left: 20, right: 20),
                        decoration: const BoxDecoration(
                            color: Colors.white,
                            borderRadius: BorderRadius.all(Radius.circular(20))),
                        child: Column(
                          children: [
                            const SizedBox(height: 5),
                            const CoordinatButton(btnText: "Titik Koordinat"),
                            RegionDropdownCostum(
                              value: selectedKecamatan,
                              items: _buildKecamatanItems(selectedKabupaten),
                              onChanged: (value) {
                                setState(() {
                                  selectedKecamatan = value;
                                  selectedDesa = null; // Reset desa
                                });
                              },
                              hint: "Pilih Kecamatan",
                              label: 'Kecamatan',
                            ),
                            RegionDropdownCostum(
                              value: selectedDesa,
                              items: _buildDesaItems(selectedKecamatan),
                              onChanged: (value) {
                                setState(() {
                                  selectedDesa = value;
                                });
                              },
                              hint: "Pilih Desa",
                              label: 'Desa',
                            ),
                            CostumDatePicker(
                              label: "Pilih waktu",
                              initialDate: DateTime.now(),
                              onDateSelected: (DateTime? date) {
                                setState(() {
                                  selectedDate = date;
                                });
                              },
                            ),
                            CostumTimePicker(
                              label: "Pilih Jam Mulai",
                              initialTime: DateTime.now(),
                              onTimeSelected: (selectedTime) {
                                setState(() {
                                  selectedDate = selectedTime;
                                });
                              },
                            ),
                            CostumTimePicker(
                              label: "Pilih Jam Selesai",
                              initialTime: DateTime.now(),
                              onTimeSelected: (selectedTime) {
                                setState(() {
                                  afterSelectedDate = selectedTime;
                                });
                              },
                            ),
                            Wrap(
                              spacing: 8,
                              runSpacing: 4,
                              children: [
                                Text(
                                  'Selected Date: ${selectedDate != null ? selectedDate.toString() : 'No Date Selected'}',
                                  style: const TextStyle(fontSize: 12),
                                ),
                                const SizedBox(
                                  width: 20,
                                ),
                                Text(
                                  'After Selected Time: ${afterSelectedDate != null ? afterSelectedDate.toString() : 'No Time Selected'}',
                                  style: const TextStyle(fontSize: 12),
                                ),
                              ],
                            ),
                            CostumInputFile(
                              label: "Input File",
                              onFilePicked: _handleFilePicked,
                              // onFilePicked: _handleFilePicked,
                              // onFilePicked: () {},
                            ),

                            const SizedBox(height: 90),
                            submitButton(text: "Simpan Data", ontap: (){}),
                            const SizedBox(height: 20),
                          ],
                        )
                      ),
                    ),
                  ),
                  const SizedBox(height: 20,)
                ],
              ),
            ),
          )
        ],
      ),
    );*/
    return Scaffold(
      body: Stack(
        children: [
          Container(
            color: Colors.purple,
            child: SingleChildScrollView(
              child: Column(
                children: [
                  Container(
                    alignment: AlignmentDirectional.centerStart,
                    padding: const EdgeInsets.only(top: 20, left: 10),
                    child: IconButton(
                      icon: const Icon(
                        Icons.arrow_back,
                        color: Colors.white,
                      ),
                      onPressed: () {
                        Navigator.pop(context);
                      },
                    ),
                  ),
                  Container(
                    alignment: Alignment.centerLeft,
                    padding:
                        const EdgeInsets.only(left: 20, right: 20, bottom: 20),
                    child: const Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          "Detail Indikator",
                          style: TextStyle(
                            fontSize: 20,
                            color: Colors.white,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        Text(
                          "Sebaran data untuk indikator tertentu.",
                          style: TextStyle(
                            fontSize: 11,
                            color: Colors.white,
                          ),
                        ),
                      ],
                    ),
                  ),
                  Card(
                    margin: const EdgeInsets.only(right: 20, left: 20),
                    child: Container(
                      padding: const EdgeInsets.only(left: 20, right: 20),
                      decoration: const BoxDecoration(
                          color: Colors.white,
                          borderRadius: BorderRadius.all(Radius.circular(20))),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: <Widget>[
                          const SizedBox(height: 5),
                          const CoordinatButton(btnText: "Titik Koordinat"),
                          // Padding(
                          //   padding: const EdgeInsets.only(bottom: 0),
                          //   child: Text(
                          //     'Kabupaten/Kota',
                          //     style: TextStyle(
                          //         fontWeight: FontWeight.bold, fontSize: 16),
                          //   ),
                          // ),
                          RegionDropdownCostum(
                            value: selectedKabupaten,
                            items: kabupatens
                                .map((kabupaten) => DropdownMenuItem(
                                      value: kabupaten.id,
                                      child: Text(kabupaten.nama),
                                    ))
                                .toList(),
                            onChanged: (value) {
                              setState(() {
                                selectedKabupaten = value;
                                selectedKecamatan = null; // Reset kecamatan
                                selectedDesa = null; // Reset desa
                              });
                            },
                            hint: "Pilih Kabupaten",
                            label: "Kabupaten",
                          ),
                         
                          RegionDropdownCostum(
                            value: selectedKecamatan,
                            items: _buildKecamatanItems(selectedKabupaten),
                            onChanged: (value) {
                              setState(() {
                                selectedKecamatan = value;
                                selectedDesa = null; // Reset desa
                              });
                            },
                            hint: "Pilih Kecamatan",
                            label: 'Kecamatan',
                          ),
                         
                          RegionDropdownCostum(
                            value: selectedDesa,
                            items: _buildDesaItems(selectedKecamatan),
                            onChanged: (value) {
                              setState(() {
                                selectedDesa = value;
                              });
                            },
                            hint: "Pilih Desa",
                            label: 'Desa',
                          ),
                          Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              
                              DetailInputBox(
                                  label: data.variabelId[0].nama,
                                  hint: data.variabelId[0].nama,
                                  controller: detailIndikatorController
                                      .namaPemilikController),
                              
                              DetailInputBox(
                                  label: data.variabelId[1].nama,
                                  hint: data.variabelId[1].nama,
                                  controller: detailIndikatorController
                                      .luasJangkauanController),
                              
                              DetailInputBox(
                                  label: data.variabelId[3].nama,
                                  hint: data.variabelId[3].nama,
                                  controller: detailIndikatorController
                                      .tinggiBangunanController),
                            ],
                          ),

                          // Padding(
                          //   padding: const EdgeInsets.only(top: 10, bottom: 0),
                          //   child: Text(
                          //     'Jam Oprasional',
                          //     style: TextStyle(
                          //         fontWeight: FontWeight.bold, fontSize: 16),
                          //   ),
                          // ),
                          // // CostumDatePicker(
                          // //   label: "Pilih waktu",
                          // //   initialDate: DateTime.now(),
                          // //   onDateSelected: (DateTime? date) {
                          // //     setState(() {
                          // //       selectedDate = date;
                          // //     });
                          // //   },
                          // // ),
                          // CostumTimePicker(
                          //   label: "Pilih Jam Mulai",
                          //   initialTime: DateTime.now(),
                          //   onTimeSelected: (selectedTime) {
                          //     setState(() {
                          //       selectedDate = selectedTime;
                          //     });
                          //   },
                          // ),
                          // CostumTimePicker(
                          //   label: "Pilih Jam Selesai",
                          //   initialTime: DateTime.now(),
                          //   onTimeSelected: (selectedTime) {
                          //     setState(() {
                          //       afterSelectedDate = selectedTime;
                          //     });
                          //   },
                          // ),
                          // Column(
                          //   // spacing: 8,
                          //   // runSpacing: 4,
                          //   crossAxisAlignment: CrossAxisAlignment.start,
                          //   children: [
                          //     Text(
                          //       'Selected Date: ${selectedDate != null ? DateFormat('HH:mm').format(selectedDate!) : 'No Date Selected'}',
                          //       style: const TextStyle(fontSize: 12),
                          //     ),
                          //     const SizedBox(
                          //       width: 20,
                          //     ),
                          //     Text(
                          //       'After Selected Time: ${afterSelectedDate != null ? DateFormat('HH:mm').format(afterSelectedDate!) : 'No Time Selected'}',
                          //       style: const TextStyle(fontSize: 12),
                          //     ),
                          //   ],
                          // ),
                          // Padding(
                          //   padding: const EdgeInsets.only(top: 10, bottom: 0),
                          //   child: Text(
                          //     'Jumlah Siswa',
                          //     style: TextStyle(
                          //         fontWeight: FontWeight.bold, fontSize: 16),
                          //   ),
                          // ),
                          // DetailInputBox(
                          //     label: 'Jumlah siswa',
                          //     hint: 'Jumlah siswa',
                          //     controller: detailIndikatorController
                          //         .namaSekolahController),
                          SizedBox(
                            height: 10,
                          ),
                          CostumInputFile(
                            label: "Input File",
                            onFilePicked: _handleFilePicked,
                            // onFilePicked: _handleFilePicked,
                            // onFilePicked: () {},
                          ),
                          CostumInputGambar(label: 'Gambaran Lokasi'),
                          const SizedBox(height: 30),
                          submitButton(
                              text: "Simpan Data",
                              ontap: () {
                                Get.toNamed('NavbarScreen');
                              }),
                          const SizedBox(height: 20),
                        ],
                      ),
                    ),
                  ),
                  const SizedBox(height: 20),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}
